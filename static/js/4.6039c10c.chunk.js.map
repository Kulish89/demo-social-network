{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","classes","dialog","active","src","avatar","to","id","name","Message","message","maxLength","maxLengthCreator","DialogReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogs","messages","addNewMessage","dialogsElements","map","el","messagesElements","dialogsItems","values","newMwssageText","DialogsContainer","compose","connect","state","dialogsPage","dispatch","newMessageText","newMessageActionCreat","withAuthRedirect"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,4B,sICWhKC,EATI,SAACC,GAClB,OACE,sBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,OAA/C,UACE,qBAAKC,IAAKL,EAAMM,SAChB,cAAC,IAAD,CAASC,GAAI,YAAcP,EAAMQ,GAAjC,SAAsCR,EAAMS,WCAnCC,EAJC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,OAAO,qBAAKV,UAAWC,IAAQS,QAAxB,SAAkCA,KCGrCC,EAAYC,YAAiB,KAgB7BC,EAAkBC,YAAU,CAAEC,KAAM,wBAAlBD,EAfL,SAACf,GAClB,OACE,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACE,cAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAM,iBACNe,YAAa,wBAEf,cAACL,EAAA,EAAD,CAAOC,UAAW,SAAUX,KAAM,aAAlC,wBAkCSgB,MA1Bf,YAAwD,IAArCC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,cAChCC,EAAkBH,EAAQI,KAAI,SAACC,GACjC,OAAO,cAAC,EAAD,CAAYvB,GAAIuB,EAAGvB,GAAIC,KAAMsB,EAAGtB,KAAMH,OAAQyB,EAAGzB,YAGtD0B,EAAmBL,EAASG,KAAI,SAACC,GACnC,OAAO,cAAC,EAAD,CAASpB,QAASoB,EAAGpB,aAO9B,OACE,sBAAKV,UAAWC,IAAQwB,QAAxB,UACE,qBAAKzB,UAAWC,IAAQ+B,aAAxB,SAAuCJ,IAEvC,sBAAK5B,UAAWC,IAAQyB,SAAxB,UACGK,EACD,8BACE,cAAClB,EAAD,CAAiBG,SAXR,SAACiB,GAEhBN,EAAcM,EAAOC,4B,eChBnBC,EAAmBC,YACvBC,aAfoB,SAACC,GACrB,MAAO,CACLb,QAASa,EAAMC,YAAYd,QAC3BC,SAAUY,EAAMC,YAAYb,aAGP,SAACc,GACxB,MAAO,CACLb,cAAe,SAACc,GACdD,EAASE,YAAsBD,SAOnCE,IAFuBP,CAGvBZ,GACaW","file":"static/js/4.6039c10c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2uAJv\",\"dialogsItems\":\"Dialogs_dialogsItems__1Cmdt\",\"dialog\":\"Dialogs_dialog__3G5Ja\",\"active\":\"Dialogs_active__T0zyh\",\"messages\":\"Dialogs_messages__3Q1d2\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./../Dialogs.module.css\";\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={classes.dialog + \" \" + classes.active}>\r\n      <img src={props.avatar}></img>\r\n      <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport classes from \"./../Dialogs.module.css\";\r\n\r\nconst Message = ({ message }) => {\r\n  return <div className={classes.message}>{message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nconst maxLength = maxLengthCreator(100);\r\nconst DialogForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        validate={[required, maxLength]}\r\n        name={\"newMwssageText\"}\r\n        placeholder={\"Write your message!\"}\r\n      ></Field>\r\n      <Field component={\"button\"} name={\"addMessage\"}>\r\n        Send\r\n      </Field>\r\n    </form>\r\n  );\r\n};\r\nconst DialogReduxForm = reduxForm({ form: \"dialogNewMessageForm\" })(DialogForm);\r\n\r\nfunction Dialogs({ dialogs, messages, addNewMessage }) {\r\n  let dialogsElements = dialogs.map((el) => {\r\n    return <DialogItem id={el.id} name={el.name} avatar={el.avatar} />;\r\n  });\r\n\r\n  let messagesElements = messages.map((el) => {\r\n    return <Message message={el.message} />;\r\n  });\r\n\r\n  let addMessage = (values) => {\r\n    // из сабмита приходят values, в которых лежит текст формы.!!!!\r\n    addNewMessage(values.newMwssageText);\r\n  };\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogsItems}>{dialogsElements}</div>\r\n\r\n      <div className={classes.messages}>\r\n        {messagesElements}\r\n        <div>\r\n          <DialogReduxForm onSubmit={addMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Dialogs;\r\n","import { newMessageActionCreat } from \"../../Redux/dialogs-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { withAuthRedirect } from \"../../hoc/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogs: state.dialogsPage.dialogs,\r\n    messages: state.dialogsPage.messages,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addNewMessage: (newMessageText) => {\r\n      dispatch(newMessageActionCreat(newMessageText));\r\n    },\r\n  };\r\n};\r\n\r\nconst DialogsContainer = compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\nexport default DialogsContainer;\r\n"],"sourceRoot":""}