{"version":3,"sources":["hoc/WithAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRediect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","styles","post","photo","src","userPhoto","message","maxLength10","maxLengthCreator","NewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","requiredField","MyPosts","memo","postsElements","posts","map","el","id","classes","values","dispatch","addNewPost","newPostText","reset","MyPostsContainer","profilePage","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","isOwner","statusTextarea","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","profile","error","formError","createField","Input","type","Object","keys","contacts","key","ProfileData","goToEditMode","contactsContainerActive","setContactsContainerActive","descriptionProfile","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","dropdownButton","onClick","dropdownContainer","active","contactTitle","contactValue","Contacts","ProfileInfo","savePhoto","saveProfile","Preloader","background","mainInfoAboutProfile","photos","large","userImg","labelUploadFile","target","files","length","inputUploadFile","initialValues","formData","then","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","compose","withRouter"],"mappings":"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","file":"static/js/3.ae5d1761.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nlet mapStateToPropsForRediect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Redirect to={\"/login\"} />;\r\n      }\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRediect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"ProfileInfo_background__2YQ7W\",\"mainInfoAboutProfile\":\"ProfileInfo_mainInfoAboutProfile__3Y5to\",\"inputUploadFile\":\"ProfileInfo_inputUploadFile__2o2t7\",\"labelUploadFile\":\"ProfileInfo_labelUploadFile__1Qkj3\",\"userImg\":\"ProfileInfo_userImg__2fbu8\",\"status\":\"ProfileInfo_status__229Uv\",\"statusTextarea\":\"ProfileInfo_statusTextarea__Ttalm\",\"descriptionProfile\":\"ProfileInfo_descriptionProfile__17pTV\",\"contacts\":\"ProfileInfo_contacts__yR6yD\",\"dropdownButton\":\"ProfileInfo_dropdownButton__1XtB3\",\"dropdownContainer\":\"ProfileInfo_dropdownContainer__r3xdd\",\"active\":\"ProfileInfo_active__1Oh18\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__18XIu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__12H-7\",\"photo\":\"Post_photo__3QEDs\",\"message\":\"Post_message__1Vuvk\"};","import React from \"react\";\r\nimport styles from \"./Post.module.css\";\r\nimport userPhoto from \"../../../../assets/images/user.png\";\r\nfunction Post(props) {\r\n  return (\r\n    <div className={styles.post}>\r\n      <div className={styles.photo}>\r\n        <img src={userPhoto}></img>\r\n      </div>\r\n\r\n      <div className={styles.message}>{props.message}</div>\r\n    </div>\r\n  );\r\n}\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm, reset } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  requiredField,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nconst maxLength10 = maxLengthCreator(300);\r\nconst NewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        name={\"newPostText\"}\r\n        placeholder=\"Write your new post!\"\r\n        validate={[requiredField, maxLength10]}\r\n      ></Field>\r\n      <Field component={\"button\"} name={\"addPost\"}>\r\n        Send\r\n      </Field>\r\n    </form>\r\n  );\r\n};\r\nconst NewPostFormRedux = reduxForm({ form: \"newPostTextForm\" })(NewPostForm);\r\n// shouldConponentUpdate - метод классовой компоненты вызывается перед рендерингом и сравнивает пропсы и стейт!!!!\r\n// shouldComponentUpdate(nextProps, nextState) {\r\n//   // если новый пропсы и стейт не равны, то возвращает тру и идет рендер!!!\r\n//   return nextProps != this.props || nextState != this.state;\r\n// }\r\n// НО можно наследоваться от PureComponent , там шулдкомпонентапдейт прописан за нас!!!\r\n\r\n// React.memo() - HOC , который проверяет стэйт и пропсы до рендеринга!!!\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = props.posts.map((el) => {\r\n    return <Post key={el.id} message={el.message} />;\r\n  });\r\n\r\n  let publicNewPost = (values, dispatch) => {\r\n    props.addNewPost(values.newPostText);\r\n    dispatch(reset(\"newPostTextForm\"));\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={classes.posts}>\r\n        <h3>My posts</h3>\r\n        <div>New post</div>\r\n        <NewPostFormRedux onSubmit={publicNewPost} />\r\n      </div>\r\n\r\n      <div>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addNewPost } from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addNewPost })(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div className={styles.status}>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {`\"${status}\"` || \"_____________\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && props.isOwner && (\r\n        <div className={styles.status}>\r\n          <textarea\r\n            className={styles.statusTextarea}\r\n            autoFocus={true}\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          ></textarea>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport {\r\n  createField,\r\n  Input,\r\n  Textarea,\r\n} from \"../../common/FormsControls/FormsControls\";\r\nimport classes from \"../../common/FormsControls/FormsControls.module.css\";\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <button>Save</button>\r\n      </div>\r\n      {error && <div className={classes.formError}> {error}</div>}\r\n      <div>\r\n        <b>Full name:</b> {createField(\"Full Name\", Input, [], \"fullName\")}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job:</b>{\" \"}\r\n        {createField(\"\", Input, [], \"lookingForAJob\", { type: \"checkbox\" })}\r\n      </div>\r\n\r\n      <div>\r\n        <b>My professional skills:</b>{\" \"}\r\n        {createField(\r\n          \"My professional skills\",\r\n          Textarea,\r\n          [],\r\n          \"lookingForAJobDescription\"\r\n        )}\r\n      </div>\r\n      <div>\r\n        <b>About me:</b> {createField(\"About me\", Textarea, [], \"aboutMe\")}\r\n      </div>\r\n      <div>\r\n        <b>Contacts:</b>\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <div key={key}>\r\n              <b>{key}:</b>\r\n              {createField(key, Input, [], \"contacts.\" + key)}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default reduxForm({ form: \"edit-profile\" })(ProfileDataForm);\r\n","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nconst ProfileInfo = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  savePhoto,\r\n  saveProfile,\r\n}) => {\r\n  let [editMode, setEditMode] = React.useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={styles.background}></div>\r\n      <div className={styles.mainInfoAboutProfile}>\r\n        <div>\r\n          <div>\r\n            <img\r\n              src={profile.photos.large || userPhoto}\r\n              className={styles.userImg}\r\n            />\r\n          </div>\r\n          <div>\r\n            {isOwner && (\r\n              <label className={styles.labelUploadFile}>\r\n                <input\r\n                  type={\"file\"}\r\n                  onChange={onMainPhotoSelected}\r\n                  className={styles.inputUploadFile}\r\n                />\r\n                <span>upload file</span>\r\n              </label>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <ProfileStatusWithHooks\r\n          status={status}\r\n          updateStatus={updateStatus}\r\n          isOwner={isOwner}\r\n        />\r\n      </div>\r\n\r\n      {editMode ? (\r\n        <ProfileDataForm\r\n          initialValues={profile}\r\n          onSubmit={onSubmit}\r\n          profile={profile}\r\n        />\r\n      ) : (\r\n        <ProfileData\r\n          profile={profile}\r\n          isOwner={isOwner}\r\n          goToEditMode={() => {\r\n            setEditMode(true);\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  const [contactsContainerActive, setContactsContainerActive] =\r\n    React.useState(false);\r\n  return (\r\n    <div className={styles.descriptionProfile}>\r\n      <div>\r\n        <b>Full name:</b> {profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n      </div>\r\n      {profile.lookingForAJob && (\r\n        <div>\r\n          <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>About me:</b> {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b\r\n          className={styles.dropdownButton}\r\n          onClick={() => {\r\n            setContactsContainerActive(!contactsContainerActive);\r\n          }}\r\n        >\r\n          Contacts: {contactsContainerActive ? <i>&#9650;</i> : <i>&#9660;</i>}\r\n        </b>\r\n        <div\r\n          className={\r\n            contactsContainerActive\r\n              ? styles.dropdownContainer + \" \" + styles.active\r\n              : styles.dropdownContainer\r\n          }\r\n        >\r\n          {Object.keys(profile.contacts).map((key) => {\r\n            return (\r\n              <Contacts\r\n                key={key}\r\n                contactTitle={key}\r\n                contactValue={profile.contacts[key]}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      {isOwner && contactsContainerActive && (\r\n        <div>\r\n          <button onClick={goToEditMode}>Edit</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contacts = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={styles.contacts}>\r\n      {contactTitle}: {contactValue}\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nfunction Profile(props) {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        isOwner={props.isOwner}\r\n        savePhoto={props.savePhoto}\r\n        saveProfile={props.saveProfile}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n} from \"../../Redux/profile-reducer\";\r\nimport Profile from \"../Profile/Profile\";\r\nimport { withRouter } from \"react-router\";\r\nimport { withAuthRedirect } from \"../../hoc/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.state}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n        saveProfile={this.props.saveProfile}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    state: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}